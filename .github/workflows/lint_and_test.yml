name: Lint & Test
on:
  push:
    branches:
      - main
  pull_request: 
    types: [opened, synchronize, reopened]

permissions:
  contents: read

jobs:
  test:
    name: Lint and test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'

      - name: Install dependencies
        run: make deps

      - name: Build and Test
        run: make test-coverage

      - name: GolangCI Lint
        uses: golangci/golangci-lint-action@v7
        with:
          version: v2.1.6
          only-new-issues: true

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          
      # - name: SonarQube Server Quality Gate check
      #   id: sonarqube-quality-gate-check
      #   uses: sonarsource/sonarqube-quality-gate-action@master
      #   with:
      #     pollingTimeoutSec: 600
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} 
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: source
          path: .
  build_image:
    name: Build Image
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    steps:
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: source
    - name: Build Docker Image
      run: make build-image
